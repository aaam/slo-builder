package templates

import (
	"github.com/prometheus/prometheus/pkg/rulefmt"
)

// Pipeline can build a RuleGroup that powers the generation of SLO time series. The
// RuleGroup generated by the Pipeline will include rules installed by templates and the
// global alerting windows, with each SLOs registered on a Pipeline instance via the
// MustRegister() method.
type Pipeline struct {
	// Name defines the RuleGroup name in Prometheus
	Name string

	// SLORules is where each SLO should place the appropriate rules that power the
	// post-processing and alert trailers.
	SLORules []rulefmt.Rule
}

func NewPipeline(name string) *Pipeline {
	return &Pipeline{name, []rulefmt.Rule{}}
}

func (p *Pipeline) MustRegister(slos ...SLO) {
	for _, slo := range slos {
		p.SLORules = append(p.SLORules, slo.Rules()...)
	}
}

func (p *Pipeline) Build() rulefmt.RuleGroups {
	return rulefmt.RuleGroups{
		Groups: []rulefmt.RuleGroup{
			rulefmt.RuleGroup{
				Name: p.Name,
				Rules: flattenRules(
					p.SLORules,
					TemplateRules,
					AlertRules,
				),
			},
		},
	}
}
